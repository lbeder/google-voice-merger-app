import './CSVReader.scss';
import moment from 'moment';
import { ParseResult } from 'papaparse';
import { Button, Form, InputGroup } from 'react-bootstrap';
import { useCSVReader } from 'react-papaparse';

export class Entry {
  public originalPhoneNumber: string;
  public firstDate: number;
  public lastDate: number;
  public phoneNumber: string;
  public name: string;
  public match: number;
  public path: string;
  public fileSize: number;
  public mediaSize: number;

  private static ATTRIBUTES_LENGTH = 9;

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  constructor(result: Record<string, any>) {
    const keysLength = Object.keys(result).length;
    if (keysLength !== Entry.ATTRIBUTES_LENGTH) {
      throw new Error(`Invalid CSV entry: ${result}`);
    }

    this.originalPhoneNumber = result['phone number (html)'];
    this.firstDate = moment(result['first date']).utc().unix() * 1000;
    this.lastDate = moment(result['last date']).utc().unix() * 1000;
    this.phoneNumber = result['phone number (vcf)'];
    this.name = result['name (vcf)'];
    this.match = Number(result['match length']);
    this.path = result['path'];
    this.fileSize = Number(result['file size']);
    this.mediaSize = Number(result['media size']);
  }
}

interface Props {
  onUploadAccepted: (results: ParseResult<string[]>) => void;
  validator?: (file: File) => void;
}

/* eslint-disable @typescript-eslint/no-explicit-any */
interface CSVChildProps {
  getRootProps: any;
  acceptedFile: any;
  ProgressBar: any;
}
/* eslint-enable @typescript-eslint/no-explicit-any */

const CSVReader = ({ onUploadAccepted, validator }: Props) => {
  const { CSVReader } = useCSVReader();

  return (
    <CSVReader
      config={{ header: true, skipEmptyLines: true }}
      onUploadAccepted={onUploadAccepted}
      validator={validator}
    >
      {({ getRootProps, acceptedFile, ProgressBar }: CSVChildProps) => (
        <div className="csv-reader">
          <div>
            Please upload the index.csv file that was previous generated by the Google Voice Takeout Merger tool.
            <br /> You can also add more index files which will be merged with the current data set.
          </div>
          <InputGroup>
            <Form.Control
              type="input"
              placeholder="CSV file"
              defaultValue={(acceptedFile && acceptedFile.name) || ''}
            />
            <Button {...getRootProps()}>Add file</Button>
          </InputGroup>

          <ProgressBar className="progress-bar" />
        </div>
      )}
    </CSVReader>
  );
};

export default CSVReader;
